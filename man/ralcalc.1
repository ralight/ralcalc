.TH "ralcalc" "1" "14th November 2008" "" ""
.SH NAME
ralcalc \- a simple command line calculator

.SH SYNOPSIS
.PP
ralcalc -h
.PP
ralcalc -a
.PP
ralcalc
.I [-e] [-f input file] [-i] [-q] [-r] equation
.PP
= -h
.PP
= -a
.PP
=
.I [-e] [-f input file] [-i] [-q] [-r] equation

.SH DESCRIPTION
.B ralcalc
is a command line calculator designed for very quick calculations where perhaps only a single result is wanted without having to start and then quit a program.
.PP
.B ralcalc
is also installed as the
.B =
command to make using it even quicker.

.SH OPTIONS
.IP -a
Print out all of the available operators, functions and constants.
.IP -e
Display the result in the "1e-3" form rather than using SI prefixes.
.IP -f
Process a list of calculations from a file. See the FILE INPUT section below for more information.
.IP -h
Display version and contact details.
.IP -i
Process a list of calculations from stdin. See the FILE INPUT section below for more information.
.IP -q
Only display the result (so hide the input and any errors).
.IP -r
Display the result in decimal format with neither SI prefixes nor exponent.

.SH NUMBER FORMAT
Numbers should be input using the "." or "," as a decimal point (this is locale dependent so both may not work in your locale), with no thousands separators.
.PP
ralcalc supports the SI prefix characters for both input and output:
.PP
.RS
= 2u/35
.br
2u/35 = 57.1429n
.RE
.PP
Numbers of the form 1e-3 are also supported, where the "e" indicates a power of ten. Don't mix and match SI prefixes and "e"s in the same number (although 1e-3n is valid, 1ne-3 is not - avoid both for less confusion).

.SH OPERATORS

The simple mathematical operators for addition (+), subtraction (-), multiplication (*, x), division (/) and power (^) are supported, with addition and subtraction having the lowest precedence and power having the highest. The functions log (base 10 logarithm) and ln (natural logarithm) are also supported.
.PP
.RS
= 1+2x3
.br
1+2x3 = 7
.PP
= 10log 0.5
.br
10log 0.5 = -3.00976
.RE
.PP
Brackets ( (), [] ) can be used to control the order in which statements are processed:
.PP
.RS
= [1+2]x3
.br
[1+2]x3 = 9
.RE
.PP
Both the square and round brackets can be used and are both directly equivalent, so [1+2)x3 is also valid. Round brackets are more commonly used in mathematics, but the square brackets (and the "x" for multiplication) are included to try to prevent problems with the shell expanding those characters.
.PP
ralcalc stores the result of the calculation so that it can be used in the next calculation with the "_" character.
.PP
.RS
= 2^0.5
.br
2^0.5 = 1.41421
.PP
= 1/_
.br
1/_ = 0.707107
.RE

.SH FUNCTIONS

The functions sin, cos, tan, asin, acos, atan, sqrt, log (base 10 logarithm) and ln (natural logarithm) are supported. The trigonometric functions work on radians. The use of brackets is not necessary, but is recommended where precedence may be confusing. The functions have equal precedence to multiplication/division so care must be taken:
.PP
.RS
= sin2x2
.br
sin2x2 = 1.81859
.PP
= sin[2x2]
.br
sin[2x2] = -0.756802
.RE

.SH CONSTANTS

The constants pi (3.14159) and exp (2.71828) can be used and are treated the same as any other number.

.SH FILE INPUT
A list of calculations can be processed at once by placing them in a file. Each line of the file will be processed exactly the same as if ralcalc had been run with those arguments. The file could look like the following (note the lack of the command "=" or "ralcalc"):
.PP
.RS
2^0.5
.br
1/_
.br
238/1064x100
.RE
.PP
File input is also possible using stdin, i.e. reading interactively directly from the terminal with each line being calculated as normal. To quit, type "q" or "quit" on a new line, use Ctrl-D to indicate the end of file, or Ctrl-C to cause ralcalc to be terminated.
.PP
If either of the file input options are given on the command line, then any calculation given on the command line will be calculated first. If both of the file input options are given, then the calculations from the -f option will be carried out first, followed by from stdin.

.SH FILES
.I ~/.ralcalc_result
.RS
The result of the last calculation, which can be accessed in a later calculation using the "_" character. Note that this is not necessarily portable across different machine architectures.

.SH ENVIRONMENT
.IP HOME
Determines where the .ralcalc_result file is stored.

.SH DIAGNOSTICS
ralcalc attempts to notify the user of as many errors as possible and indicate where those errors are, if they are user input related.

.PP
If an unknown character is included in the equation, an "unknown token" error will be generated. The error marker points to the invalid character.
.PP
.RS
= 34/3@2

Error: 34/3@2
           ^ unknown token
.RE

.PP
If an invalid number is included, a "bad number" error will be generated. The error marker points to the end of the invalid number.
.PP
.RS
= 3.14.159x2.8^2

Error: 3.14.159x2.8^2
              ^ bad number
.RE

.PP
If the number of open and close brackets do not match up, a "mismatched brackets" error will be generated. The error marker position has no significance.
.PP
.RS
= 5/[[2+3]*9

Error: 5/[[2+3]*9
                 ^ mismatched brackets

.RE

.PP
If an operator appears in an invalid position, an "invalid operator" error will be generated. Examples of this include duplicated operators "++" and operators next to closed brackets "+)". The error marker indicates the invalid operator.
.PP
.RS
= 3^^7

Error: 3^^7
         ^ invalid operator
.RE

.PP
If a bracket appears in an invalid position, an "invalid bracket" error will be generated. This type of error often overlaps with other errors, so there will be a number of messages written to the screen. It is best to fix this error first as it will likely be the root cause of the problem. The error marker indicates the invalid bracket.
.PP
.RS
= [2+]3
 
Error: [2+]3
          ^ invalid bracket
  
Error: [2+]3
            ^ invalid operator
.RE

.PP
If ralcalc is unable to allocate some memory, an "out of memory" error will be generated.

.PP
Internal error: If the parser notices two numbers next to each other yet does not generate a "bad number" error, then a "duplicate number" error will be generated. This should never happen.

.PP
Internal error: If an unknown error code is passed to the error output function, an "unknown error" will be generated and the invalid error code displayed.

.SH EXIT VALUES
.TP
.B 0
.I Success
.TP
.B 1
.I At least one error occurred.

.SH BUGS
Only a single "-f filename" can be passed at once.

.SH AUTHOR
Roger Light <roger@atchoo.org>
